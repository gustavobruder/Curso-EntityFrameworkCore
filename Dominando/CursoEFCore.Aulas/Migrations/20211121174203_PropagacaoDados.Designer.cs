// <auto-generated />
using CursoEFCore.Aulas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CursoEFCore.Aulas.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211121174203_PropagacaoDados")]
    partial class PropagacaoDados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence<int>("MinhaSequencia", "sequencias")
                .IncrementsBy(2)
                .HasMin(1L)
                .HasMax(10L)
                .IsCyclic();

            modelBuilder.Entity("CursoEFCore.Aulas.Domain.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasDefaultValueSql("NEXT VALUE FOR sequencias.MinhaSequencia");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("ativo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("descricao");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Descricao", "Ativo")
                        .IsUnique()
                        .HasDatabaseName("ix_indice_composto")
                        .HasFilter("descricao IS NOT NULL")
                        .HasFillFactor(80);

                    b.ToTable("departamentos");
                });

            modelBuilder.Entity("CursoEFCore.Aulas.Domain.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Santa Catarina"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Parana"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Rio Grande do Sul"
                        });
                });

            modelBuilder.Entity("CursoEFCore.Aulas.Domain.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("CHAR(11)")
                        .HasColumnName("cpf");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int")
                        .HasColumnName("departamento_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("CursoEFCore.Aulas.Domain.Funcionario", b =>
                {
                    b.HasOne("CursoEFCore.Aulas.Domain.Departamento", "Departamento")
                        .WithMany("Funcionarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("CursoEFCore.Aulas.Domain.Departamento", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
